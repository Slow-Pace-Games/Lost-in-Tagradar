//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Inputs/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Movements"",
            ""id"": ""0a90b706-1780-4b35-90b5-5b6333972b4f"",
            ""actions"": [
                {
                    ""name"": ""ZQSD"",
                    ""type"": ""Value"",
                    ""id"": ""9e91a930-b260-4550-99f8-d8da12b61939"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""c289747e-e646-44d0-8169-b607b5b595e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""602176fd-9732-46ac-9645-4863d9c7bdaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""f1fc7751-d0b7-4322-86ca-d16911d93f14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseMovements"",
                    ""type"": ""Value"",
                    ""id"": ""38925c7e-c25a-4b39-ac1d-b39f876810ff"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ZQSDComposite"",
                    ""id"": ""ed766e74-d209-4952-8a54-81c0e7308f59"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZQSD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a6d5680e-de6c-4ede-aa96-b41c73297559"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZQSD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""22bd05da-771a-47bd-88d6-2c7482a93e02"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZQSD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""abec4a77-9074-4aa4-9454-235cf6b8f066"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZQSD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f7033bfb-11d2-4a30-b857-38e8f1331f17"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZQSD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""619671a8-f188-4d3b-98ab-2ca26bd12dbd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02d89478-2bcf-4289-8208-89c70d9404d6"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dea298d9-01bb-4c10-90ea-d9cc657d0d2b"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""7c3e92b3-d032-46f7-bcd4-7433d39d0959"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovements"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f71ce59a-ac79-4139-ae7d-af694070d9a3"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a9eb605a-4089-45c8-b1fd-d5ea41b97302"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7378f619-f0b8-4c4c-ad36-358cb09427b5"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e0d9e100-230a-4107-b800-7561b499d991"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Action"",
            ""id"": ""69e89c94-3ce5-42ef-bdc7-8d005fa21634"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""71b7e19a-beaa-4582-8e53-494ae94d8fd7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenBuildMenu"",
                    ""type"": ""Button"",
                    ""id"": ""682f5d99-7c2a-4ddc-afc2-5df936274ee6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""6cccbed4-f402-4449-846b-f6d0ed369100"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""98fc3326-4a05-47fc-977b-f1da8fcffd98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scan"",
                    ""type"": ""Button"",
                    ""id"": ""c899d126-ed23-4f10-b38f-cca7dcb7cb12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenCodex"",
                    ""type"": ""Button"",
                    ""id"": ""52eec42d-89c4-48d6-a994-18125ab1431c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPause"",
                    ""type"": ""Button"",
                    ""id"": ""66e8678b-8c04-4c1e-b73a-929935d58d7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e60f5596-dff4-4d78-9943-b974ebacd6a3"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0ba1828-d088-43c1-9844-d1889d7dff8c"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9945e199-c78f-4d9d-810d-00ba46937fe2"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d88d17d-65f3-4399-9473-1981eee1ccae"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcd8d1f8-b6e3-4d02-a471-120fc6586823"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9b49f06-1e2e-4a4a-8a65-1cb0fc2903b1"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenBuildMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58f99c7a-9424-49b5-8fd7-921a4baa0840"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenCodex"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57e56a3e-09a0-4d95-bc5f-5d0e5881e1f0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Inventory"",
            ""id"": ""ba86846c-3ade-4ec5-9ee4-8de80181cdad"",
            ""actions"": [
                {
                    ""name"": ""DivideStacks"",
                    ""type"": ""Button"",
                    ""id"": ""fa3ef546-d909-421d-9d21-45826dcd92c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseInventory"",
                    ""type"": ""Button"",
                    ""id"": ""4046d130-acfc-44b3-bfd0-b321313ec2c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""52a63849-0004-47da-93d1-9eba89cd462d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DivideStacks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58b0f602-c35f-4524-b778-c6ab8d6e6118"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b70630d-62e9-4156-904a-e23160dd7686"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5ce8339-82b1-418b-8219-fd93a0a7ee26"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Build"",
            ""id"": ""de7b01f7-ea03-41c3-842b-ab83209f03d5"",
            ""actions"": [
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""44251f30-c708-4966-9475-c9b549cc821d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CancelBuild"",
                    ""type"": ""Button"",
                    ""id"": ""abe71938-7f38-4e0e-a528-826c45332602"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build"",
                    ""type"": ""Button"",
                    ""id"": ""9c3533d3-d0d4-4a56-ada1-2a3147fe5f6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 10"",
                    ""type"": ""Button"",
                    ""id"": ""3413f702-58f5-45dd-aefa-ba89f30f8463"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 9"",
                    ""type"": ""Button"",
                    ""id"": ""d585427b-dcc7-4901-881a-b3692fa90f9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 8"",
                    ""type"": ""Button"",
                    ""id"": ""2a12107b-7866-41ff-afe7-d5e3f788659e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 7"",
                    ""type"": ""Button"",
                    ""id"": ""68fb0b1f-25bd-4bf0-8288-fe50d8abf709"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 6"",
                    ""type"": ""Button"",
                    ""id"": ""65fcda27-88af-4847-b91d-ae0312237386"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 5"",
                    ""type"": ""Button"",
                    ""id"": ""6dba41f6-6a4f-429e-b1ed-ad5af41614b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 4"",
                    ""type"": ""Button"",
                    ""id"": ""488c47ba-27e5-4286-8c6f-693fa652e8ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 3"",
                    ""type"": ""Button"",
                    ""id"": ""32b3b917-0994-4ecc-9482-4e80fb5393b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 2"",
                    ""type"": ""Button"",
                    ""id"": ""38967195-c1a7-412f-9ad8-b70c6f25dba2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 1"",
                    ""type"": ""Button"",
                    ""id"": ""cf03cba4-0fca-41f9-92b0-7a8832fd0fb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DestructionMode"",
                    ""type"": ""Button"",
                    ""id"": ""52532035-6dcc-41f0-9705-659e727794c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Destruct"",
                    ""type"": ""Button"",
                    ""id"": ""0f815122-d981-4ccb-91a7-61b858c2537f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3a582827-86b1-4b3f-8cf4-f782d7428ba0"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfa9779f-a13e-4601-84f2-a16026f149de"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""039e0acc-8dda-47be-85cc-a58dedb11c08"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc4a54e5-f356-4be0-985d-c71806964b0d"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ce589db-acd0-4d88-a791-cd395afaeecb"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42011594-22a2-4ae3-937e-b72b71ec6626"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f596693c-580e-44f5-973b-be7dcaf18c09"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""858c7000-d0c0-480a-ae7d-6aba423fe175"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32383880-7efb-4dce-916c-fe94aab82d32"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""881f992c-c505-49ce-b4b7-ba0b892a45f6"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e09e6bd0-d6f3-4b24-af29-49254fdeb309"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelBuild"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a021410-b036-483e-849a-0a1248d3c0f0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97f30293-3870-4099-bbd9-78c00030737c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Build"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f589e51a-864c-4e9f-ae79-a7a8cc74fcd3"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DestructionMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f20ade7a-042b-4737-8709-977431234be9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Destruct"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""HudMachine"",
            ""id"": ""023f8610-a9e4-4ccc-99e8-9b5c5332107d"",
            ""actions"": [
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""001c82b5-40c5-4131-8449-65cdb6b40854"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractMachineHud"",
                    ""type"": ""Button"",
                    ""id"": ""282a3786-fcac-4909-a632-719a2a34f443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c13d38f5-1836-4c46-bace-7486453cea4d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b356269a-7761-4c60-9303-42edf345673e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractMachineHud"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menuing"",
            ""id"": ""79f0e882-9258-4243-b335-045265eeea57"",
            ""actions"": [
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""63f81b43-432b-495c-9063-0ecaf6eab73c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""85745709-254e-49b2-8f11-bac00816cec2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CraftBench"",
            ""id"": ""720f821e-e0da-43ac-95ec-912d10709e83"",
            ""actions"": [
                {
                    ""name"": ""CraftWithKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""4416da18-590e-4179-8a15-f76338649f8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CraftWithMouse"",
                    ""type"": ""Button"",
                    ""id"": ""938da22d-2634-4062-a3ef-62320ecccabf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0d352bb1-d478-48f6-9817-354e8a1845ab"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CraftWithKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fd7913b-b86d-4c4a-a889-222ec9dccfb4"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CraftWithMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Codex"",
            ""id"": ""be484dc2-817d-451f-bd36-a3ef5861fa22"",
            ""actions"": [
                {
                    ""name"": ""CloseCodex"",
                    ""type"": ""Button"",
                    ""id"": ""10284760-2f98-48ba-a30d-3ba7ffdadb04"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0632cb2e-3162-4d1d-ad77-4380daefea33"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseCodex"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed6cb47d-5b69-4255-9f5f-05735846b721"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseCodex"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BuildMenu"",
            ""id"": ""4e4a11c8-0317-4943-8b9e-8bdbfd9cd559"",
            ""actions"": [
                {
                    ""name"": ""CloseBuildMenu"",
                    ""type"": ""Button"",
                    ""id"": ""4f0bbd9b-ed8c-4d96-a7a4-f5a62454f4bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar1"",
                    ""type"": ""Button"",
                    ""id"": ""7c650216-c45c-4315-933f-3e7ca637ccad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar2"",
                    ""type"": ""Button"",
                    ""id"": ""d0a12f7f-962f-47d2-8d66-58f76b7e9e8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar3"",
                    ""type"": ""Button"",
                    ""id"": ""1b0477f2-70d6-460f-9263-dbedd7d038c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar4"",
                    ""type"": ""Button"",
                    ""id"": ""5b74a517-113b-4ec6-b472-bb5b4f893ee6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar5"",
                    ""type"": ""Button"",
                    ""id"": ""b204d2f2-8c90-43b4-8c79-adb9d200dcee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar6"",
                    ""type"": ""Button"",
                    ""id"": ""7063c587-cfab-470a-b4bb-6779f058563c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar7"",
                    ""type"": ""Button"",
                    ""id"": ""c8060ce7-b597-4368-828f-4c4115c756a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar8"",
                    ""type"": ""Button"",
                    ""id"": ""bdc2d437-8d74-4b61-a663-a3bbc3d4a39d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar9"",
                    ""type"": ""Button"",
                    ""id"": ""acc4205a-c26f-4b50-acd2-b2fbfee41c9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar10"",
                    ""type"": ""Button"",
                    ""id"": ""8c62d9bd-8cf4-413d-aebd-cf9b2638d99e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""889962be-8755-4cce-911f-bda84a500123"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseBuildMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2ab9bf0-cf17-4ed9-8cb8-c239505121f1"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseBuildMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d1c3a2f-a623-4149-a9a4-464d0571b87b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6f1ca8e-decc-46f8-8d31-e9f75652e37f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a05137b0-1bda-41dc-b066-f6377be4ff3c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac04af7e-5a2b-446c-a72d-954ac62361fb"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e282ac8-858d-4e6d-9409-b5028cae89d9"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a282ac96-14dd-4a2d-b7b2-e1f63ba9cdf4"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b43637c-9c83-4311-b672-7461b65e9932"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee35faf5-c561-4e80-a7c2-8f1569759276"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50da8070-ed5e-4788-a654-3a20996040f8"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baf9b128-914b-496c-9552-ad1fb251aee7"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DebugKeys"",
            ""id"": ""00d918ad-74f2-4c31-a62e-c4a5e4d2ebf5"",
            ""actions"": [
                {
                    ""name"": ""Save"",
                    ""type"": ""Button"",
                    ""id"": ""8789633e-3f6a-40d6-b33d-e6a4d24ce5f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Load"",
                    ""type"": ""Button"",
                    ""id"": ""b1fdeb7e-2133-461f-951d-0fca4a988cda"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddSlot"",
                    ""type"": ""Button"",
                    ""id"": ""908e4911-d795-4376-9df0-af41b6b83284"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddItem"",
                    ""type"": ""Button"",
                    ""id"": ""ce505166-7011-4576-a7e9-0598f0bc29b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnlockAllBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""a3e8ff28-1ea2-47fb-a7fe-b67df91c9955"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CheatEngine"",
                    ""type"": ""Button"",
                    ""id"": ""1d31eac9-ba65-4ca3-856d-082c8acc3afc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartTraveling"",
                    ""type"": ""Button"",
                    ""id"": ""398fef90-27c5-420b-b9d5-95fa4173a96c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8f830506-2435-4114-8916-90d5519d72bf"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d4887f9-35cb-48c8-8786-562564d0c1e8"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3318ab9-a092-405a-b939-79bea99bd162"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1be3c45d-91c4-4e99-8668-72cb9de79277"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4f7f285-7e56-4844-b984-bc42d7f88401"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnlockAllBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56e5bfdd-0e89-46cc-8dc1-e0ebcc357a23"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CheatEngine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c04859e-452c-4ea2-be2f-16ac99427f93"",
                    ""path"": ""<Keyboard>/numpad7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartTraveling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movements
        m_Movements = asset.FindActionMap("Movements", throwIfNotFound: true);
        m_Movements_ZQSD = m_Movements.FindAction("ZQSD", throwIfNotFound: true);
        m_Movements_Jump = m_Movements.FindAction("Jump", throwIfNotFound: true);
        m_Movements_Run = m_Movements.FindAction("Run", throwIfNotFound: true);
        m_Movements_Crouch = m_Movements.FindAction("Crouch", throwIfNotFound: true);
        m_Movements_MouseMovements = m_Movements.FindAction("MouseMovements", throwIfNotFound: true);
        // Action
        m_Action = asset.FindActionMap("Action", throwIfNotFound: true);
        m_Action_Interact = m_Action.FindAction("Interact", throwIfNotFound: true);
        m_Action_OpenBuildMenu = m_Action.FindAction("OpenBuildMenu", throwIfNotFound: true);
        m_Action_OpenInventory = m_Action.FindAction("OpenInventory", throwIfNotFound: true);
        m_Action_Attack = m_Action.FindAction("Attack", throwIfNotFound: true);
        m_Action_Scan = m_Action.FindAction("Scan", throwIfNotFound: true);
        m_Action_OpenCodex = m_Action.FindAction("OpenCodex", throwIfNotFound: true);
        m_Action_OpenPause = m_Action.FindAction("OpenPause", throwIfNotFound: true);
        // Inventory
        m_Inventory = asset.FindActionMap("Inventory", throwIfNotFound: true);
        m_Inventory_DivideStacks = m_Inventory.FindAction("DivideStacks", throwIfNotFound: true);
        m_Inventory_CloseInventory = m_Inventory.FindAction("CloseInventory", throwIfNotFound: true);
        // Build
        m_Build = asset.FindActionMap("Build", throwIfNotFound: true);
        m_Build_MouseScroll = m_Build.FindAction("MouseScroll", throwIfNotFound: true);
        m_Build_CancelBuild = m_Build.FindAction("CancelBuild", throwIfNotFound: true);
        m_Build_Build = m_Build.FindAction("Build", throwIfNotFound: true);
        m_Build_Hotbar10 = m_Build.FindAction("Hotbar 10", throwIfNotFound: true);
        m_Build_Hotbar9 = m_Build.FindAction("Hotbar 9", throwIfNotFound: true);
        m_Build_Hotbar8 = m_Build.FindAction("Hotbar 8", throwIfNotFound: true);
        m_Build_Hotbar7 = m_Build.FindAction("Hotbar 7", throwIfNotFound: true);
        m_Build_Hotbar6 = m_Build.FindAction("Hotbar 6", throwIfNotFound: true);
        m_Build_Hotbar5 = m_Build.FindAction("Hotbar 5", throwIfNotFound: true);
        m_Build_Hotbar4 = m_Build.FindAction("Hotbar 4", throwIfNotFound: true);
        m_Build_Hotbar3 = m_Build.FindAction("Hotbar 3", throwIfNotFound: true);
        m_Build_Hotbar2 = m_Build.FindAction("Hotbar 2", throwIfNotFound: true);
        m_Build_Hotbar1 = m_Build.FindAction("Hotbar 1", throwIfNotFound: true);
        m_Build_DestructionMode = m_Build.FindAction("DestructionMode", throwIfNotFound: true);
        m_Build_Destruct = m_Build.FindAction("Destruct", throwIfNotFound: true);
        // HudMachine
        m_HudMachine = asset.FindActionMap("HudMachine", throwIfNotFound: true);
        m_HudMachine_Close = m_HudMachine.FindAction("Close", throwIfNotFound: true);
        m_HudMachine_InteractMachineHud = m_HudMachine.FindAction("InteractMachineHud", throwIfNotFound: true);
        // Menuing
        m_Menuing = asset.FindActionMap("Menuing", throwIfNotFound: true);
        m_Menuing_Close = m_Menuing.FindAction("Close", throwIfNotFound: true);
        // CraftBench
        m_CraftBench = asset.FindActionMap("CraftBench", throwIfNotFound: true);
        m_CraftBench_CraftWithKeyboard = m_CraftBench.FindAction("CraftWithKeyboard", throwIfNotFound: true);
        m_CraftBench_CraftWithMouse = m_CraftBench.FindAction("CraftWithMouse", throwIfNotFound: true);
        // Codex
        m_Codex = asset.FindActionMap("Codex", throwIfNotFound: true);
        m_Codex_CloseCodex = m_Codex.FindAction("CloseCodex", throwIfNotFound: true);
        // BuildMenu
        m_BuildMenu = asset.FindActionMap("BuildMenu", throwIfNotFound: true);
        m_BuildMenu_CloseBuildMenu = m_BuildMenu.FindAction("CloseBuildMenu", throwIfNotFound: true);
        m_BuildMenu_Hotbar1 = m_BuildMenu.FindAction("Hotbar1", throwIfNotFound: true);
        m_BuildMenu_Hotbar2 = m_BuildMenu.FindAction("Hotbar2", throwIfNotFound: true);
        m_BuildMenu_Hotbar3 = m_BuildMenu.FindAction("Hotbar3", throwIfNotFound: true);
        m_BuildMenu_Hotbar4 = m_BuildMenu.FindAction("Hotbar4", throwIfNotFound: true);
        m_BuildMenu_Hotbar5 = m_BuildMenu.FindAction("Hotbar5", throwIfNotFound: true);
        m_BuildMenu_Hotbar6 = m_BuildMenu.FindAction("Hotbar6", throwIfNotFound: true);
        m_BuildMenu_Hotbar7 = m_BuildMenu.FindAction("Hotbar7", throwIfNotFound: true);
        m_BuildMenu_Hotbar8 = m_BuildMenu.FindAction("Hotbar8", throwIfNotFound: true);
        m_BuildMenu_Hotbar9 = m_BuildMenu.FindAction("Hotbar9", throwIfNotFound: true);
        m_BuildMenu_Hotbar10 = m_BuildMenu.FindAction("Hotbar10", throwIfNotFound: true);
        // DebugKeys
        m_DebugKeys = asset.FindActionMap("DebugKeys", throwIfNotFound: true);
        m_DebugKeys_Save = m_DebugKeys.FindAction("Save", throwIfNotFound: true);
        m_DebugKeys_Load = m_DebugKeys.FindAction("Load", throwIfNotFound: true);
        m_DebugKeys_AddSlot = m_DebugKeys.FindAction("AddSlot", throwIfNotFound: true);
        m_DebugKeys_AddItem = m_DebugKeys.FindAction("AddItem", throwIfNotFound: true);
        m_DebugKeys_UnlockAllBuilding = m_DebugKeys.FindAction("UnlockAllBuilding", throwIfNotFound: true);
        m_DebugKeys_CheatEngine = m_DebugKeys.FindAction("CheatEngine", throwIfNotFound: true);
        m_DebugKeys_StartTraveling = m_DebugKeys.FindAction("StartTraveling", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movements
    private readonly InputActionMap m_Movements;
    private List<IMovementsActions> m_MovementsActionsCallbackInterfaces = new List<IMovementsActions>();
    private readonly InputAction m_Movements_ZQSD;
    private readonly InputAction m_Movements_Jump;
    private readonly InputAction m_Movements_Run;
    private readonly InputAction m_Movements_Crouch;
    private readonly InputAction m_Movements_MouseMovements;
    public struct MovementsActions
    {
        private @PlayerInputActions m_Wrapper;
        public MovementsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ZQSD => m_Wrapper.m_Movements_ZQSD;
        public InputAction @Jump => m_Wrapper.m_Movements_Jump;
        public InputAction @Run => m_Wrapper.m_Movements_Run;
        public InputAction @Crouch => m_Wrapper.m_Movements_Crouch;
        public InputAction @MouseMovements => m_Wrapper.m_Movements_MouseMovements;
        public InputActionMap Get() { return m_Wrapper.m_Movements; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementsActions set) { return set.Get(); }
        public void AddCallbacks(IMovementsActions instance)
        {
            if (instance == null || m_Wrapper.m_MovementsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovementsActionsCallbackInterfaces.Add(instance);
            @ZQSD.started += instance.OnZQSD;
            @ZQSD.performed += instance.OnZQSD;
            @ZQSD.canceled += instance.OnZQSD;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @MouseMovements.started += instance.OnMouseMovements;
            @MouseMovements.performed += instance.OnMouseMovements;
            @MouseMovements.canceled += instance.OnMouseMovements;
        }

        private void UnregisterCallbacks(IMovementsActions instance)
        {
            @ZQSD.started -= instance.OnZQSD;
            @ZQSD.performed -= instance.OnZQSD;
            @ZQSD.canceled -= instance.OnZQSD;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @MouseMovements.started -= instance.OnMouseMovements;
            @MouseMovements.performed -= instance.OnMouseMovements;
            @MouseMovements.canceled -= instance.OnMouseMovements;
        }

        public void RemoveCallbacks(IMovementsActions instance)
        {
            if (m_Wrapper.m_MovementsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovementsActions instance)
        {
            foreach (var item in m_Wrapper.m_MovementsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovementsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovementsActions @Movements => new MovementsActions(this);

    // Action
    private readonly InputActionMap m_Action;
    private List<IActionActions> m_ActionActionsCallbackInterfaces = new List<IActionActions>();
    private readonly InputAction m_Action_Interact;
    private readonly InputAction m_Action_OpenBuildMenu;
    private readonly InputAction m_Action_OpenInventory;
    private readonly InputAction m_Action_Attack;
    private readonly InputAction m_Action_Scan;
    private readonly InputAction m_Action_OpenCodex;
    private readonly InputAction m_Action_OpenPause;
    public struct ActionActions
    {
        private @PlayerInputActions m_Wrapper;
        public ActionActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Action_Interact;
        public InputAction @OpenBuildMenu => m_Wrapper.m_Action_OpenBuildMenu;
        public InputAction @OpenInventory => m_Wrapper.m_Action_OpenInventory;
        public InputAction @Attack => m_Wrapper.m_Action_Attack;
        public InputAction @Scan => m_Wrapper.m_Action_Scan;
        public InputAction @OpenCodex => m_Wrapper.m_Action_OpenCodex;
        public InputAction @OpenPause => m_Wrapper.m_Action_OpenPause;
        public InputActionMap Get() { return m_Wrapper.m_Action; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionActions set) { return set.Get(); }
        public void AddCallbacks(IActionActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionActionsCallbackInterfaces.Add(instance);
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @OpenBuildMenu.started += instance.OnOpenBuildMenu;
            @OpenBuildMenu.performed += instance.OnOpenBuildMenu;
            @OpenBuildMenu.canceled += instance.OnOpenBuildMenu;
            @OpenInventory.started += instance.OnOpenInventory;
            @OpenInventory.performed += instance.OnOpenInventory;
            @OpenInventory.canceled += instance.OnOpenInventory;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Scan.started += instance.OnScan;
            @Scan.performed += instance.OnScan;
            @Scan.canceled += instance.OnScan;
            @OpenCodex.started += instance.OnOpenCodex;
            @OpenCodex.performed += instance.OnOpenCodex;
            @OpenCodex.canceled += instance.OnOpenCodex;
            @OpenPause.started += instance.OnOpenPause;
            @OpenPause.performed += instance.OnOpenPause;
            @OpenPause.canceled += instance.OnOpenPause;
        }

        private void UnregisterCallbacks(IActionActions instance)
        {
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @OpenBuildMenu.started -= instance.OnOpenBuildMenu;
            @OpenBuildMenu.performed -= instance.OnOpenBuildMenu;
            @OpenBuildMenu.canceled -= instance.OnOpenBuildMenu;
            @OpenInventory.started -= instance.OnOpenInventory;
            @OpenInventory.performed -= instance.OnOpenInventory;
            @OpenInventory.canceled -= instance.OnOpenInventory;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Scan.started -= instance.OnScan;
            @Scan.performed -= instance.OnScan;
            @Scan.canceled -= instance.OnScan;
            @OpenCodex.started -= instance.OnOpenCodex;
            @OpenCodex.performed -= instance.OnOpenCodex;
            @OpenCodex.canceled -= instance.OnOpenCodex;
            @OpenPause.started -= instance.OnOpenPause;
            @OpenPause.performed -= instance.OnOpenPause;
            @OpenPause.canceled -= instance.OnOpenPause;
        }

        public void RemoveCallbacks(IActionActions instance)
        {
            if (m_Wrapper.m_ActionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionActions @Action => new ActionActions(this);

    // Inventory
    private readonly InputActionMap m_Inventory;
    private List<IInventoryActions> m_InventoryActionsCallbackInterfaces = new List<IInventoryActions>();
    private readonly InputAction m_Inventory_DivideStacks;
    private readonly InputAction m_Inventory_CloseInventory;
    public struct InventoryActions
    {
        private @PlayerInputActions m_Wrapper;
        public InventoryActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @DivideStacks => m_Wrapper.m_Inventory_DivideStacks;
        public InputAction @CloseInventory => m_Wrapper.m_Inventory_CloseInventory;
        public InputActionMap Get() { return m_Wrapper.m_Inventory; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryActions set) { return set.Get(); }
        public void AddCallbacks(IInventoryActions instance)
        {
            if (instance == null || m_Wrapper.m_InventoryActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InventoryActionsCallbackInterfaces.Add(instance);
            @DivideStacks.started += instance.OnDivideStacks;
            @DivideStacks.performed += instance.OnDivideStacks;
            @DivideStacks.canceled += instance.OnDivideStacks;
            @CloseInventory.started += instance.OnCloseInventory;
            @CloseInventory.performed += instance.OnCloseInventory;
            @CloseInventory.canceled += instance.OnCloseInventory;
        }

        private void UnregisterCallbacks(IInventoryActions instance)
        {
            @DivideStacks.started -= instance.OnDivideStacks;
            @DivideStacks.performed -= instance.OnDivideStacks;
            @DivideStacks.canceled -= instance.OnDivideStacks;
            @CloseInventory.started -= instance.OnCloseInventory;
            @CloseInventory.performed -= instance.OnCloseInventory;
            @CloseInventory.canceled -= instance.OnCloseInventory;
        }

        public void RemoveCallbacks(IInventoryActions instance)
        {
            if (m_Wrapper.m_InventoryActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInventoryActions instance)
        {
            foreach (var item in m_Wrapper.m_InventoryActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InventoryActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InventoryActions @Inventory => new InventoryActions(this);

    // Build
    private readonly InputActionMap m_Build;
    private List<IBuildActions> m_BuildActionsCallbackInterfaces = new List<IBuildActions>();
    private readonly InputAction m_Build_MouseScroll;
    private readonly InputAction m_Build_CancelBuild;
    private readonly InputAction m_Build_Build;
    private readonly InputAction m_Build_Hotbar10;
    private readonly InputAction m_Build_Hotbar9;
    private readonly InputAction m_Build_Hotbar8;
    private readonly InputAction m_Build_Hotbar7;
    private readonly InputAction m_Build_Hotbar6;
    private readonly InputAction m_Build_Hotbar5;
    private readonly InputAction m_Build_Hotbar4;
    private readonly InputAction m_Build_Hotbar3;
    private readonly InputAction m_Build_Hotbar2;
    private readonly InputAction m_Build_Hotbar1;
    private readonly InputAction m_Build_DestructionMode;
    private readonly InputAction m_Build_Destruct;
    public struct BuildActions
    {
        private @PlayerInputActions m_Wrapper;
        public BuildActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseScroll => m_Wrapper.m_Build_MouseScroll;
        public InputAction @CancelBuild => m_Wrapper.m_Build_CancelBuild;
        public InputAction @Build => m_Wrapper.m_Build_Build;
        public InputAction @Hotbar10 => m_Wrapper.m_Build_Hotbar10;
        public InputAction @Hotbar9 => m_Wrapper.m_Build_Hotbar9;
        public InputAction @Hotbar8 => m_Wrapper.m_Build_Hotbar8;
        public InputAction @Hotbar7 => m_Wrapper.m_Build_Hotbar7;
        public InputAction @Hotbar6 => m_Wrapper.m_Build_Hotbar6;
        public InputAction @Hotbar5 => m_Wrapper.m_Build_Hotbar5;
        public InputAction @Hotbar4 => m_Wrapper.m_Build_Hotbar4;
        public InputAction @Hotbar3 => m_Wrapper.m_Build_Hotbar3;
        public InputAction @Hotbar2 => m_Wrapper.m_Build_Hotbar2;
        public InputAction @Hotbar1 => m_Wrapper.m_Build_Hotbar1;
        public InputAction @DestructionMode => m_Wrapper.m_Build_DestructionMode;
        public InputAction @Destruct => m_Wrapper.m_Build_Destruct;
        public InputActionMap Get() { return m_Wrapper.m_Build; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildActions set) { return set.Get(); }
        public void AddCallbacks(IBuildActions instance)
        {
            if (instance == null || m_Wrapper.m_BuildActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BuildActionsCallbackInterfaces.Add(instance);
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @CancelBuild.started += instance.OnCancelBuild;
            @CancelBuild.performed += instance.OnCancelBuild;
            @CancelBuild.canceled += instance.OnCancelBuild;
            @Build.started += instance.OnBuild;
            @Build.performed += instance.OnBuild;
            @Build.canceled += instance.OnBuild;
            @Hotbar10.started += instance.OnHotbar10;
            @Hotbar10.performed += instance.OnHotbar10;
            @Hotbar10.canceled += instance.OnHotbar10;
            @Hotbar9.started += instance.OnHotbar9;
            @Hotbar9.performed += instance.OnHotbar9;
            @Hotbar9.canceled += instance.OnHotbar9;
            @Hotbar8.started += instance.OnHotbar8;
            @Hotbar8.performed += instance.OnHotbar8;
            @Hotbar8.canceled += instance.OnHotbar8;
            @Hotbar7.started += instance.OnHotbar7;
            @Hotbar7.performed += instance.OnHotbar7;
            @Hotbar7.canceled += instance.OnHotbar7;
            @Hotbar6.started += instance.OnHotbar6;
            @Hotbar6.performed += instance.OnHotbar6;
            @Hotbar6.canceled += instance.OnHotbar6;
            @Hotbar5.started += instance.OnHotbar5;
            @Hotbar5.performed += instance.OnHotbar5;
            @Hotbar5.canceled += instance.OnHotbar5;
            @Hotbar4.started += instance.OnHotbar4;
            @Hotbar4.performed += instance.OnHotbar4;
            @Hotbar4.canceled += instance.OnHotbar4;
            @Hotbar3.started += instance.OnHotbar3;
            @Hotbar3.performed += instance.OnHotbar3;
            @Hotbar3.canceled += instance.OnHotbar3;
            @Hotbar2.started += instance.OnHotbar2;
            @Hotbar2.performed += instance.OnHotbar2;
            @Hotbar2.canceled += instance.OnHotbar2;
            @Hotbar1.started += instance.OnHotbar1;
            @Hotbar1.performed += instance.OnHotbar1;
            @Hotbar1.canceled += instance.OnHotbar1;
            @DestructionMode.started += instance.OnDestructionMode;
            @DestructionMode.performed += instance.OnDestructionMode;
            @DestructionMode.canceled += instance.OnDestructionMode;
            @Destruct.started += instance.OnDestruct;
            @Destruct.performed += instance.OnDestruct;
            @Destruct.canceled += instance.OnDestruct;
        }

        private void UnregisterCallbacks(IBuildActions instance)
        {
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @CancelBuild.started -= instance.OnCancelBuild;
            @CancelBuild.performed -= instance.OnCancelBuild;
            @CancelBuild.canceled -= instance.OnCancelBuild;
            @Build.started -= instance.OnBuild;
            @Build.performed -= instance.OnBuild;
            @Build.canceled -= instance.OnBuild;
            @Hotbar10.started -= instance.OnHotbar10;
            @Hotbar10.performed -= instance.OnHotbar10;
            @Hotbar10.canceled -= instance.OnHotbar10;
            @Hotbar9.started -= instance.OnHotbar9;
            @Hotbar9.performed -= instance.OnHotbar9;
            @Hotbar9.canceled -= instance.OnHotbar9;
            @Hotbar8.started -= instance.OnHotbar8;
            @Hotbar8.performed -= instance.OnHotbar8;
            @Hotbar8.canceled -= instance.OnHotbar8;
            @Hotbar7.started -= instance.OnHotbar7;
            @Hotbar7.performed -= instance.OnHotbar7;
            @Hotbar7.canceled -= instance.OnHotbar7;
            @Hotbar6.started -= instance.OnHotbar6;
            @Hotbar6.performed -= instance.OnHotbar6;
            @Hotbar6.canceled -= instance.OnHotbar6;
            @Hotbar5.started -= instance.OnHotbar5;
            @Hotbar5.performed -= instance.OnHotbar5;
            @Hotbar5.canceled -= instance.OnHotbar5;
            @Hotbar4.started -= instance.OnHotbar4;
            @Hotbar4.performed -= instance.OnHotbar4;
            @Hotbar4.canceled -= instance.OnHotbar4;
            @Hotbar3.started -= instance.OnHotbar3;
            @Hotbar3.performed -= instance.OnHotbar3;
            @Hotbar3.canceled -= instance.OnHotbar3;
            @Hotbar2.started -= instance.OnHotbar2;
            @Hotbar2.performed -= instance.OnHotbar2;
            @Hotbar2.canceled -= instance.OnHotbar2;
            @Hotbar1.started -= instance.OnHotbar1;
            @Hotbar1.performed -= instance.OnHotbar1;
            @Hotbar1.canceled -= instance.OnHotbar1;
            @DestructionMode.started -= instance.OnDestructionMode;
            @DestructionMode.performed -= instance.OnDestructionMode;
            @DestructionMode.canceled -= instance.OnDestructionMode;
            @Destruct.started -= instance.OnDestruct;
            @Destruct.performed -= instance.OnDestruct;
            @Destruct.canceled -= instance.OnDestruct;
        }

        public void RemoveCallbacks(IBuildActions instance)
        {
            if (m_Wrapper.m_BuildActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBuildActions instance)
        {
            foreach (var item in m_Wrapper.m_BuildActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BuildActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BuildActions @Build => new BuildActions(this);

    // HudMachine
    private readonly InputActionMap m_HudMachine;
    private List<IHudMachineActions> m_HudMachineActionsCallbackInterfaces = new List<IHudMachineActions>();
    private readonly InputAction m_HudMachine_Close;
    private readonly InputAction m_HudMachine_InteractMachineHud;
    public struct HudMachineActions
    {
        private @PlayerInputActions m_Wrapper;
        public HudMachineActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Close => m_Wrapper.m_HudMachine_Close;
        public InputAction @InteractMachineHud => m_Wrapper.m_HudMachine_InteractMachineHud;
        public InputActionMap Get() { return m_Wrapper.m_HudMachine; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HudMachineActions set) { return set.Get(); }
        public void AddCallbacks(IHudMachineActions instance)
        {
            if (instance == null || m_Wrapper.m_HudMachineActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_HudMachineActionsCallbackInterfaces.Add(instance);
            @Close.started += instance.OnClose;
            @Close.performed += instance.OnClose;
            @Close.canceled += instance.OnClose;
            @InteractMachineHud.started += instance.OnInteractMachineHud;
            @InteractMachineHud.performed += instance.OnInteractMachineHud;
            @InteractMachineHud.canceled += instance.OnInteractMachineHud;
        }

        private void UnregisterCallbacks(IHudMachineActions instance)
        {
            @Close.started -= instance.OnClose;
            @Close.performed -= instance.OnClose;
            @Close.canceled -= instance.OnClose;
            @InteractMachineHud.started -= instance.OnInteractMachineHud;
            @InteractMachineHud.performed -= instance.OnInteractMachineHud;
            @InteractMachineHud.canceled -= instance.OnInteractMachineHud;
        }

        public void RemoveCallbacks(IHudMachineActions instance)
        {
            if (m_Wrapper.m_HudMachineActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IHudMachineActions instance)
        {
            foreach (var item in m_Wrapper.m_HudMachineActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_HudMachineActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public HudMachineActions @HudMachine => new HudMachineActions(this);

    // Menuing
    private readonly InputActionMap m_Menuing;
    private List<IMenuingActions> m_MenuingActionsCallbackInterfaces = new List<IMenuingActions>();
    private readonly InputAction m_Menuing_Close;
    public struct MenuingActions
    {
        private @PlayerInputActions m_Wrapper;
        public MenuingActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Close => m_Wrapper.m_Menuing_Close;
        public InputActionMap Get() { return m_Wrapper.m_Menuing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuingActions set) { return set.Get(); }
        public void AddCallbacks(IMenuingActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuingActionsCallbackInterfaces.Add(instance);
            @Close.started += instance.OnClose;
            @Close.performed += instance.OnClose;
            @Close.canceled += instance.OnClose;
        }

        private void UnregisterCallbacks(IMenuingActions instance)
        {
            @Close.started -= instance.OnClose;
            @Close.performed -= instance.OnClose;
            @Close.canceled -= instance.OnClose;
        }

        public void RemoveCallbacks(IMenuingActions instance)
        {
            if (m_Wrapper.m_MenuingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuingActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuingActions @Menuing => new MenuingActions(this);

    // CraftBench
    private readonly InputActionMap m_CraftBench;
    private List<ICraftBenchActions> m_CraftBenchActionsCallbackInterfaces = new List<ICraftBenchActions>();
    private readonly InputAction m_CraftBench_CraftWithKeyboard;
    private readonly InputAction m_CraftBench_CraftWithMouse;
    public struct CraftBenchActions
    {
        private @PlayerInputActions m_Wrapper;
        public CraftBenchActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CraftWithKeyboard => m_Wrapper.m_CraftBench_CraftWithKeyboard;
        public InputAction @CraftWithMouse => m_Wrapper.m_CraftBench_CraftWithMouse;
        public InputActionMap Get() { return m_Wrapper.m_CraftBench; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CraftBenchActions set) { return set.Get(); }
        public void AddCallbacks(ICraftBenchActions instance)
        {
            if (instance == null || m_Wrapper.m_CraftBenchActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CraftBenchActionsCallbackInterfaces.Add(instance);
            @CraftWithKeyboard.started += instance.OnCraftWithKeyboard;
            @CraftWithKeyboard.performed += instance.OnCraftWithKeyboard;
            @CraftWithKeyboard.canceled += instance.OnCraftWithKeyboard;
            @CraftWithMouse.started += instance.OnCraftWithMouse;
            @CraftWithMouse.performed += instance.OnCraftWithMouse;
            @CraftWithMouse.canceled += instance.OnCraftWithMouse;
        }

        private void UnregisterCallbacks(ICraftBenchActions instance)
        {
            @CraftWithKeyboard.started -= instance.OnCraftWithKeyboard;
            @CraftWithKeyboard.performed -= instance.OnCraftWithKeyboard;
            @CraftWithKeyboard.canceled -= instance.OnCraftWithKeyboard;
            @CraftWithMouse.started -= instance.OnCraftWithMouse;
            @CraftWithMouse.performed -= instance.OnCraftWithMouse;
            @CraftWithMouse.canceled -= instance.OnCraftWithMouse;
        }

        public void RemoveCallbacks(ICraftBenchActions instance)
        {
            if (m_Wrapper.m_CraftBenchActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICraftBenchActions instance)
        {
            foreach (var item in m_Wrapper.m_CraftBenchActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CraftBenchActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CraftBenchActions @CraftBench => new CraftBenchActions(this);

    // Codex
    private readonly InputActionMap m_Codex;
    private List<ICodexActions> m_CodexActionsCallbackInterfaces = new List<ICodexActions>();
    private readonly InputAction m_Codex_CloseCodex;
    public struct CodexActions
    {
        private @PlayerInputActions m_Wrapper;
        public CodexActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseCodex => m_Wrapper.m_Codex_CloseCodex;
        public InputActionMap Get() { return m_Wrapper.m_Codex; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CodexActions set) { return set.Get(); }
        public void AddCallbacks(ICodexActions instance)
        {
            if (instance == null || m_Wrapper.m_CodexActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CodexActionsCallbackInterfaces.Add(instance);
            @CloseCodex.started += instance.OnCloseCodex;
            @CloseCodex.performed += instance.OnCloseCodex;
            @CloseCodex.canceled += instance.OnCloseCodex;
        }

        private void UnregisterCallbacks(ICodexActions instance)
        {
            @CloseCodex.started -= instance.OnCloseCodex;
            @CloseCodex.performed -= instance.OnCloseCodex;
            @CloseCodex.canceled -= instance.OnCloseCodex;
        }

        public void RemoveCallbacks(ICodexActions instance)
        {
            if (m_Wrapper.m_CodexActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICodexActions instance)
        {
            foreach (var item in m_Wrapper.m_CodexActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CodexActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CodexActions @Codex => new CodexActions(this);

    // BuildMenu
    private readonly InputActionMap m_BuildMenu;
    private List<IBuildMenuActions> m_BuildMenuActionsCallbackInterfaces = new List<IBuildMenuActions>();
    private readonly InputAction m_BuildMenu_CloseBuildMenu;
    private readonly InputAction m_BuildMenu_Hotbar1;
    private readonly InputAction m_BuildMenu_Hotbar2;
    private readonly InputAction m_BuildMenu_Hotbar3;
    private readonly InputAction m_BuildMenu_Hotbar4;
    private readonly InputAction m_BuildMenu_Hotbar5;
    private readonly InputAction m_BuildMenu_Hotbar6;
    private readonly InputAction m_BuildMenu_Hotbar7;
    private readonly InputAction m_BuildMenu_Hotbar8;
    private readonly InputAction m_BuildMenu_Hotbar9;
    private readonly InputAction m_BuildMenu_Hotbar10;
    public struct BuildMenuActions
    {
        private @PlayerInputActions m_Wrapper;
        public BuildMenuActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseBuildMenu => m_Wrapper.m_BuildMenu_CloseBuildMenu;
        public InputAction @Hotbar1 => m_Wrapper.m_BuildMenu_Hotbar1;
        public InputAction @Hotbar2 => m_Wrapper.m_BuildMenu_Hotbar2;
        public InputAction @Hotbar3 => m_Wrapper.m_BuildMenu_Hotbar3;
        public InputAction @Hotbar4 => m_Wrapper.m_BuildMenu_Hotbar4;
        public InputAction @Hotbar5 => m_Wrapper.m_BuildMenu_Hotbar5;
        public InputAction @Hotbar6 => m_Wrapper.m_BuildMenu_Hotbar6;
        public InputAction @Hotbar7 => m_Wrapper.m_BuildMenu_Hotbar7;
        public InputAction @Hotbar8 => m_Wrapper.m_BuildMenu_Hotbar8;
        public InputAction @Hotbar9 => m_Wrapper.m_BuildMenu_Hotbar9;
        public InputAction @Hotbar10 => m_Wrapper.m_BuildMenu_Hotbar10;
        public InputActionMap Get() { return m_Wrapper.m_BuildMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildMenuActions set) { return set.Get(); }
        public void AddCallbacks(IBuildMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_BuildMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BuildMenuActionsCallbackInterfaces.Add(instance);
            @CloseBuildMenu.started += instance.OnCloseBuildMenu;
            @CloseBuildMenu.performed += instance.OnCloseBuildMenu;
            @CloseBuildMenu.canceled += instance.OnCloseBuildMenu;
            @Hotbar1.started += instance.OnHotbar1;
            @Hotbar1.performed += instance.OnHotbar1;
            @Hotbar1.canceled += instance.OnHotbar1;
            @Hotbar2.started += instance.OnHotbar2;
            @Hotbar2.performed += instance.OnHotbar2;
            @Hotbar2.canceled += instance.OnHotbar2;
            @Hotbar3.started += instance.OnHotbar3;
            @Hotbar3.performed += instance.OnHotbar3;
            @Hotbar3.canceled += instance.OnHotbar3;
            @Hotbar4.started += instance.OnHotbar4;
            @Hotbar4.performed += instance.OnHotbar4;
            @Hotbar4.canceled += instance.OnHotbar4;
            @Hotbar5.started += instance.OnHotbar5;
            @Hotbar5.performed += instance.OnHotbar5;
            @Hotbar5.canceled += instance.OnHotbar5;
            @Hotbar6.started += instance.OnHotbar6;
            @Hotbar6.performed += instance.OnHotbar6;
            @Hotbar6.canceled += instance.OnHotbar6;
            @Hotbar7.started += instance.OnHotbar7;
            @Hotbar7.performed += instance.OnHotbar7;
            @Hotbar7.canceled += instance.OnHotbar7;
            @Hotbar8.started += instance.OnHotbar8;
            @Hotbar8.performed += instance.OnHotbar8;
            @Hotbar8.canceled += instance.OnHotbar8;
            @Hotbar9.started += instance.OnHotbar9;
            @Hotbar9.performed += instance.OnHotbar9;
            @Hotbar9.canceled += instance.OnHotbar9;
            @Hotbar10.started += instance.OnHotbar10;
            @Hotbar10.performed += instance.OnHotbar10;
            @Hotbar10.canceled += instance.OnHotbar10;
        }

        private void UnregisterCallbacks(IBuildMenuActions instance)
        {
            @CloseBuildMenu.started -= instance.OnCloseBuildMenu;
            @CloseBuildMenu.performed -= instance.OnCloseBuildMenu;
            @CloseBuildMenu.canceled -= instance.OnCloseBuildMenu;
            @Hotbar1.started -= instance.OnHotbar1;
            @Hotbar1.performed -= instance.OnHotbar1;
            @Hotbar1.canceled -= instance.OnHotbar1;
            @Hotbar2.started -= instance.OnHotbar2;
            @Hotbar2.performed -= instance.OnHotbar2;
            @Hotbar2.canceled -= instance.OnHotbar2;
            @Hotbar3.started -= instance.OnHotbar3;
            @Hotbar3.performed -= instance.OnHotbar3;
            @Hotbar3.canceled -= instance.OnHotbar3;
            @Hotbar4.started -= instance.OnHotbar4;
            @Hotbar4.performed -= instance.OnHotbar4;
            @Hotbar4.canceled -= instance.OnHotbar4;
            @Hotbar5.started -= instance.OnHotbar5;
            @Hotbar5.performed -= instance.OnHotbar5;
            @Hotbar5.canceled -= instance.OnHotbar5;
            @Hotbar6.started -= instance.OnHotbar6;
            @Hotbar6.performed -= instance.OnHotbar6;
            @Hotbar6.canceled -= instance.OnHotbar6;
            @Hotbar7.started -= instance.OnHotbar7;
            @Hotbar7.performed -= instance.OnHotbar7;
            @Hotbar7.canceled -= instance.OnHotbar7;
            @Hotbar8.started -= instance.OnHotbar8;
            @Hotbar8.performed -= instance.OnHotbar8;
            @Hotbar8.canceled -= instance.OnHotbar8;
            @Hotbar9.started -= instance.OnHotbar9;
            @Hotbar9.performed -= instance.OnHotbar9;
            @Hotbar9.canceled -= instance.OnHotbar9;
            @Hotbar10.started -= instance.OnHotbar10;
            @Hotbar10.performed -= instance.OnHotbar10;
            @Hotbar10.canceled -= instance.OnHotbar10;
        }

        public void RemoveCallbacks(IBuildMenuActions instance)
        {
            if (m_Wrapper.m_BuildMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBuildMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_BuildMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BuildMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BuildMenuActions @BuildMenu => new BuildMenuActions(this);

    // DebugKeys
    private readonly InputActionMap m_DebugKeys;
    private List<IDebugKeysActions> m_DebugKeysActionsCallbackInterfaces = new List<IDebugKeysActions>();
    private readonly InputAction m_DebugKeys_Save;
    private readonly InputAction m_DebugKeys_Load;
    private readonly InputAction m_DebugKeys_AddSlot;
    private readonly InputAction m_DebugKeys_AddItem;
    private readonly InputAction m_DebugKeys_UnlockAllBuilding;
    private readonly InputAction m_DebugKeys_CheatEngine;
    private readonly InputAction m_DebugKeys_StartTraveling;
    public struct DebugKeysActions
    {
        private @PlayerInputActions m_Wrapper;
        public DebugKeysActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Save => m_Wrapper.m_DebugKeys_Save;
        public InputAction @Load => m_Wrapper.m_DebugKeys_Load;
        public InputAction @AddSlot => m_Wrapper.m_DebugKeys_AddSlot;
        public InputAction @AddItem => m_Wrapper.m_DebugKeys_AddItem;
        public InputAction @UnlockAllBuilding => m_Wrapper.m_DebugKeys_UnlockAllBuilding;
        public InputAction @CheatEngine => m_Wrapper.m_DebugKeys_CheatEngine;
        public InputAction @StartTraveling => m_Wrapper.m_DebugKeys_StartTraveling;
        public InputActionMap Get() { return m_Wrapper.m_DebugKeys; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugKeysActions set) { return set.Get(); }
        public void AddCallbacks(IDebugKeysActions instance)
        {
            if (instance == null || m_Wrapper.m_DebugKeysActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DebugKeysActionsCallbackInterfaces.Add(instance);
            @Save.started += instance.OnSave;
            @Save.performed += instance.OnSave;
            @Save.canceled += instance.OnSave;
            @Load.started += instance.OnLoad;
            @Load.performed += instance.OnLoad;
            @Load.canceled += instance.OnLoad;
            @AddSlot.started += instance.OnAddSlot;
            @AddSlot.performed += instance.OnAddSlot;
            @AddSlot.canceled += instance.OnAddSlot;
            @AddItem.started += instance.OnAddItem;
            @AddItem.performed += instance.OnAddItem;
            @AddItem.canceled += instance.OnAddItem;
            @UnlockAllBuilding.started += instance.OnUnlockAllBuilding;
            @UnlockAllBuilding.performed += instance.OnUnlockAllBuilding;
            @UnlockAllBuilding.canceled += instance.OnUnlockAllBuilding;
            @CheatEngine.started += instance.OnCheatEngine;
            @CheatEngine.performed += instance.OnCheatEngine;
            @CheatEngine.canceled += instance.OnCheatEngine;
            @StartTraveling.started += instance.OnStartTraveling;
            @StartTraveling.performed += instance.OnStartTraveling;
            @StartTraveling.canceled += instance.OnStartTraveling;
        }

        private void UnregisterCallbacks(IDebugKeysActions instance)
        {
            @Save.started -= instance.OnSave;
            @Save.performed -= instance.OnSave;
            @Save.canceled -= instance.OnSave;
            @Load.started -= instance.OnLoad;
            @Load.performed -= instance.OnLoad;
            @Load.canceled -= instance.OnLoad;
            @AddSlot.started -= instance.OnAddSlot;
            @AddSlot.performed -= instance.OnAddSlot;
            @AddSlot.canceled -= instance.OnAddSlot;
            @AddItem.started -= instance.OnAddItem;
            @AddItem.performed -= instance.OnAddItem;
            @AddItem.canceled -= instance.OnAddItem;
            @UnlockAllBuilding.started -= instance.OnUnlockAllBuilding;
            @UnlockAllBuilding.performed -= instance.OnUnlockAllBuilding;
            @UnlockAllBuilding.canceled -= instance.OnUnlockAllBuilding;
            @CheatEngine.started -= instance.OnCheatEngine;
            @CheatEngine.performed -= instance.OnCheatEngine;
            @CheatEngine.canceled -= instance.OnCheatEngine;
            @StartTraveling.started -= instance.OnStartTraveling;
            @StartTraveling.performed -= instance.OnStartTraveling;
            @StartTraveling.canceled -= instance.OnStartTraveling;
        }

        public void RemoveCallbacks(IDebugKeysActions instance)
        {
            if (m_Wrapper.m_DebugKeysActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDebugKeysActions instance)
        {
            foreach (var item in m_Wrapper.m_DebugKeysActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DebugKeysActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DebugKeysActions @DebugKeys => new DebugKeysActions(this);
    public interface IMovementsActions
    {
        void OnZQSD(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnMouseMovements(InputAction.CallbackContext context);
    }
    public interface IActionActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnOpenBuildMenu(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnScan(InputAction.CallbackContext context);
        void OnOpenCodex(InputAction.CallbackContext context);
        void OnOpenPause(InputAction.CallbackContext context);
    }
    public interface IInventoryActions
    {
        void OnDivideStacks(InputAction.CallbackContext context);
        void OnCloseInventory(InputAction.CallbackContext context);
    }
    public interface IBuildActions
    {
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnCancelBuild(InputAction.CallbackContext context);
        void OnBuild(InputAction.CallbackContext context);
        void OnHotbar10(InputAction.CallbackContext context);
        void OnHotbar9(InputAction.CallbackContext context);
        void OnHotbar8(InputAction.CallbackContext context);
        void OnHotbar7(InputAction.CallbackContext context);
        void OnHotbar6(InputAction.CallbackContext context);
        void OnHotbar5(InputAction.CallbackContext context);
        void OnHotbar4(InputAction.CallbackContext context);
        void OnHotbar3(InputAction.CallbackContext context);
        void OnHotbar2(InputAction.CallbackContext context);
        void OnHotbar1(InputAction.CallbackContext context);
        void OnDestructionMode(InputAction.CallbackContext context);
        void OnDestruct(InputAction.CallbackContext context);
    }
    public interface IHudMachineActions
    {
        void OnClose(InputAction.CallbackContext context);
        void OnInteractMachineHud(InputAction.CallbackContext context);
    }
    public interface IMenuingActions
    {
        void OnClose(InputAction.CallbackContext context);
    }
    public interface ICraftBenchActions
    {
        void OnCraftWithKeyboard(InputAction.CallbackContext context);
        void OnCraftWithMouse(InputAction.CallbackContext context);
    }
    public interface ICodexActions
    {
        void OnCloseCodex(InputAction.CallbackContext context);
    }
    public interface IBuildMenuActions
    {
        void OnCloseBuildMenu(InputAction.CallbackContext context);
        void OnHotbar1(InputAction.CallbackContext context);
        void OnHotbar2(InputAction.CallbackContext context);
        void OnHotbar3(InputAction.CallbackContext context);
        void OnHotbar4(InputAction.CallbackContext context);
        void OnHotbar5(InputAction.CallbackContext context);
        void OnHotbar6(InputAction.CallbackContext context);
        void OnHotbar7(InputAction.CallbackContext context);
        void OnHotbar8(InputAction.CallbackContext context);
        void OnHotbar9(InputAction.CallbackContext context);
        void OnHotbar10(InputAction.CallbackContext context);
    }
    public interface IDebugKeysActions
    {
        void OnSave(InputAction.CallbackContext context);
        void OnLoad(InputAction.CallbackContext context);
        void OnAddSlot(InputAction.CallbackContext context);
        void OnAddItem(InputAction.CallbackContext context);
        void OnUnlockAllBuilding(InputAction.CallbackContext context);
        void OnCheatEngine(InputAction.CallbackContext context);
        void OnStartTraveling(InputAction.CallbackContext context);
    }
}
